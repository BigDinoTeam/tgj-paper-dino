@startuml

class World {
	List<DynamicEntity> dynamicEntities
	Player player
	update()
	render()
}

class Grid {
	Cell[][] cells
	render()
}

class Cell {
	List<Piece> pieces
	render()
}

class Piece {
	Entity entity
	boolean walkable
	render()
}

abstract class Entity {
	static Image sprite
	Piece[][] pieces
	int[2] position
}

class Nest extends Entity {
	float[] paperProbabilities
}

class Building extends Entity {
	AI dino
	int type // 0: House
}

abstract class DynamicEntity extends Entity {
	World world
	DynamicEntity(World world)
	update()
	move()
}

class Dino extends DynamicEntity

class AI extends Dino {
	Building building
	SpeciesColor color
	Activity activity
	boolean pacified
}

class Player extends Dino {
	int[] paperCounts
	int[] paperMaxCounts
	SpeciesColor selectedPaper
	collectPapers()
	selectPaper()
	throwPaper()
	punchWithPaper()
}

class Paper extends DynamicEntity {
	SpeciesColor color
	float[2] speed
}

enum Activity {
	wandering
	resting
	hangry
}

enum SpeciesColor {
	red
	blue
}

World "0"--down"1" Grid
World "1"--down"*" DynamicEntity
World "0"--"1" Player
Grid "0"--down"*" Cell
Cell "0"--right"*" Piece
Piece "+"--right"1" Entity
Building "1"--"1" AI
AI -- Activity
AI -- SpeciesColor
Player -- SpeciesColor
Paper -- SpeciesColor

@enduml
